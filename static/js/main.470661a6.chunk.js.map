{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/App/App.jsx","services/fetch-services.js","index.js"],"names":["Searchbar","onSubmit","useState","value","setValue","className","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","ImageGalleryItem","webformatURL","tags","id","handlerItemClick","onClick","src","alt","ImageGallery","list","map","el","key_id","Button","isOff","disabled","visible","color","height","width","modalContainer","document","querySelector","Modal","onClose","children","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","target","fetchService","this","searchQuery","pageNumber","currentCount","perPage","axios","request","baseURL","params","image_type","orientation","q","page","per_page","key","response","data","hits","totalHits","fetchData","shortid","require","App","images","setImages","showModal","setShowModal","isLoading","setIsLoading","currentImg","setCurrentImg","totalImgs","setTotalImgs","handleLoadMore","HeightBeforeRender","documentElement","scrollHeight","nextDataPortion","then","prevState","generate","catch","console","log","handlerScrollTo","finally","renderedContentHeight","scrollTo","top","behavior","toggleModal","isButtonVisible","length","search","current","find","largeImageURL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.470661a6.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport './Searchbar.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [value, setValue] = useState('');\n  const handlerSearch = e => {\n    setValue(e.currentTarget.value);\n  };\n  const handlerSubmit = e => {\n    e.preventDefault();\n    onSubmit(value);\n  };\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handlerSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={value}\n          onChange={handlerSearch}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nconst ImageGalleryItem = ({ webformatURL, tags, id, handlerItemClick }) => {\n  return (\n    <li\n      className=\"ImageGalleryItem\"\n      onClick={() => {\n        handlerItemClick(id);\n      }}\n    >\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  handlerItemClick: PropTypes.func.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\nexport default ImageGalleryItem;\n","// import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ImageGallery.css';\nimport ImageGalleryItem from '../../components/ImageGalleryItem';\n\nfunction ImageGallery({ list, handlerItemClick }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {list.map(el => (\n        <ImageGalleryItem\n          key={el.key_id}\n          webformatURL={el.webformatURL}\n          tags={el.tags}\n          id={el.id}\n          handlerItemClick={handlerItemClick}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ),\n  handlerItemClick: PropTypes.func.isRequired,\n};\nexport default ImageGallery;\n","// import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Spinner from 'react-loader-spinner';\n\nfunction Button({ isOff, onClick }) {\n  return (\n    <button disabled={isOff} className=\"Button\" type=\"button\" onClick={onClick}>\n      {!isOff && 'Load more . . .'}\n      <Spinner\n        visible={isOff}\n        type=\"ThreeDots\"\n        color=\"#FFF\"\n        height={19}\n        width={69}\n      />\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  isOff: PropTypes.bool.isRequired,\n};\n\nexport default Button;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\nconst modalContainer = document.querySelector('#modal-root');\n\nfunction Modal({ onClose, children }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">{children}</div>\n    </div>,\n    modalContainer,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\nexport default Modal;\n","import { useState } from 'react';\n\nimport Searchbar from '../../components/Searchbar';\nimport ImageGallery from '../../components/ImageGallery';\nimport Button from '../../components/Button';\nimport Modal from '../../components/Modal';\n\nimport './App.css';\n\nimport FetchService from '../../services/fetch-services';\nconst fetchService = new FetchService();\nconst shortid = require('shortid');\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentImg, setCurrentImg] = useState({ src: '', alt: '' });\n  const [totalImgs, setTotalImgs] = useState(0);\n\n  const handlerSubmit = search => {\n    window.scrollTo(0, 0);\n    setIsLoading(true);\n    fetchService.searchQuery = search;\n    fetchService.pageNumber = 1;\n    fetchService.currentCount = 0;\n    fetchService\n      .fetchData()\n      .then(data => {\n        const images = data.hits.map(el => ({\n          ...el,\n          key_id: shortid.generate(),\n        }));\n        setImages([...images]);\n        setTotalImgs(data.totalHits);\n      })\n      .catch(console.log)\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleLoadMore = () => {\n    const HeightBeforeRender = document.documentElement.scrollHeight;\n    setIsLoading(true);\n    fetchService\n      .nextDataPortion()\n      .then(data => {\n        setImages(prevState => {\n          const images = data.hits.map(el => ({\n            ...el,\n            key_id: shortid.generate(),\n          }));\n          return [...prevState, ...images];\n        });\n      })\n      .catch(console.log)\n      .then(() => {\n        handlerScrollTo(HeightBeforeRender);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  const handlerItemClick = id => {\n    toggleModal();\n    const current = images.find(el => el.id === id);\n    setCurrentImg({ src: current.largeImageURL, alt: current.tags });\n  };\n  const handlerScrollTo = height => {\n    const searchElementHeight = 70;\n    const buttonLoadmoreHeight = 80;\n    const renderedContentHeight =\n      document.documentElement.scrollHeight - height;\n    const scrollTo =\n      document.documentElement.scrollHeight - renderedContentHeight;\n    window.scrollTo({\n      top: scrollTo - (searchElementHeight + buttonLoadmoreHeight),\n      behavior: 'smooth',\n    });\n  };\n  const toggleModal = () => {\n    setShowModal(prevState => !prevState);\n  };\n  const isButtonVisible =\n    images.length > 0 && fetchService.currentCount < totalImgs && !isLoading;\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handlerSubmit} />\n      <ImageGallery list={images} handlerItemClick={handlerItemClick} />\n\n      {isButtonVisible ? (\n        <Button isOff={false} onClick={handleLoadMore} />\n      ) : (\n        isLoading && <Button isOff={true} onClick={handleLoadMore} />\n      )}\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <img src={currentImg.src} alt={currentImg.alt} />\n        </Modal>\n      )}\n    </div>\n  );\n}\nexport default App;\n","import axios from 'axios';\nconst API_KEY = '18927781-76591304de9a35a1d49e108a5';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport default class FetchService {\n  constructor() {\n    this.searchQuery = '';\n    this.pageNumber = 1;\n    this.currentCount = 0;\n    this.perPage = 12;\n  }\n\n  async fetchData() {\n    try {\n      const response = await axios.request({\n        baseURL: `${BASE_URL}`,\n        params: {\n          image_type: 'photo',\n          orientation: 'horizontal',\n          q: this.searchQuery,\n          page: this.pageNumber,\n          per_page: this.perPage,\n          key: API_KEY,\n        },\n      });\n      const { hits, totalHits } = response.data;\n      return { hits, totalHits };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async nextDataPortion() {\n    this.pageNumber += 1;\n    this.currentCount = this.pageNumber * this.perPage;\n    return this.fetchData();\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}